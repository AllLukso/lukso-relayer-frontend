import Head from "next/head";
import Image from "next/image";
import { useEffect } from "react";
import styles from "../styles/Home.module.css";
import UniversalProfileContract from "@lukso/lsp-smart-contracts/artifacts/UniversalProfile.json";
import KeyManagerContract from "@lukso/lsp-smart-contracts/artifacts/LSP6KeyManager.json";
import Web3 from "web3";

export default function Home() {
  useEffect(() => {
    async function a() {
      const web3 = new Web3(window.ethereum);

      const controllingAccountPrivateKey = "";
      const myUpAddress = "";
      const myUniversalProfile = new web3.eth.Contract(
        UniversalProfileContract.abi,
        myUpAddress
      );

      const keyManagerAddress = await myUniversalProfile.methods.owner().call();
      const KeyManager = new web3.eth.Contract(
        KeyManagerContract.abi,
        keyManagerAddress
      );

      const controllerAccount = web3.eth.accounts.privateKeyToAccount(
        controllingAccountPrivateKey
      );
      const channelId = 0;

      const nonce = await KeyManager.methods
        .getNonce(controllerAccount.address, channelId)
        .call();

      const abiPayload = myUniversalProfile.methods
        .execute(
          0, // Operation type: CALL
          "", // Recipient address
          web3.utils.toWei("0.1"), // Value
          "0x" // Data
        )
        .encodeABI();

      const chainId = await web3.eth.getChainId(); // will be 2828 on L16

      const message = web3.utils.soliditySha3(
        chainId,
        keyManagerAddress,
        nonce,
        {
          t: "bytes",
          v: abiPayload,
        }
      );

      const signatureObject = controllerAccount.sign(message);
      const signature = signatureObject.signature;

      console.log("abiPayload: ", abiPayload);
      console.log("nonce: ", nonce);
      console.log("signature: ", signature);

      // const executeRelayCallTransaction = await KeyManager.methods
      //   .executeRelayCall(signature, nonce, abiPayload)
      //   .send({ from: "" });

      // console.log(executeRelayCallTransaction);
    }
    a();
  });

  return (
    <div className={styles.container}>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main className={styles.main}>
        <h1 className={styles.title}>
          Welcome to <a href="https://nextjs.org">Next.js!</a>
        </h1>

        <p className={styles.description}>
          Get started by editing{" "}
          <code className={styles.code}>pages/index.js</code>
        </p>

        <div className={styles.grid}>
          <a href="https://nextjs.org/docs" className={styles.card}>
            <h2>Documentation &rarr;</h2>
            <p>Find in-depth information about Next.js features and API.</p>
          </a>

          <a href="https://nextjs.org/learn" className={styles.card}>
            <h2>Learn &rarr;</h2>
            <p>Learn about Next.js in an interactive course with quizzes!</p>
          </a>

          <a
            href="https://github.com/vercel/next.js/tree/canary/examples"
            className={styles.card}
          >
            <h2>Examples &rarr;</h2>
            <p>Discover and deploy boilerplate example Next.js projects.</p>
          </a>

          <a
            href="https://vercel.com/new?utm_source=create-next-app&utm_medium=default-template&utm_campaign=create-next-app"
            className={styles.card}
          >
            <h2>Deploy &rarr;</h2>
            <p>
              Instantly deploy your Next.js site to a public URL with Vercel.
            </p>
          </a>
        </div>
      </main>

      <footer className={styles.footer}>
        <a
          href="https://vercel.com?utm_source=create-next-app&utm_medium=default-template&utm_campaign=create-next-app"
          target="_blank"
          rel="noopener noreferrer"
        >
          Powered by{" "}
          <span className={styles.logo}>
            <Image src="/vercel.svg" alt="Vercel Logo" width={72} height={16} />
          </span>
        </a>
      </footer>
    </div>
  );
}
